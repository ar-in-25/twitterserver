import{a as U,h as w,j as S}from"./chunk-4AVR65JZ.js";import{Ka as C,Ma as l,Oa as g,P as u,Pa as x,Qa as h,Ra as s,Sa as r,Ta as v,U as P,Wa as y,X as a,Ya as n,Za as p,_a as b,ab as c,cb as _,eb as I,na as m,xa as i,zb as M}from"./chunk-QATPKBQI.js";function F(e,o){if(e&1&&(s(0,"article",0)(1,"span"),n(2),r(),n(3," \xA0 "),s(4,"span",1),n(5),r(),n(6," \xA0 "),s(7,"span",2),n(8),_(9,"date"),r(),s(10,"p"),n(11),r(),s(12,"div",3)(13,"div"),n(14),r()()()),e&2){let t=y();l("routerLink","/"+t.post().User.username+"/post/"+t.post().id),i(2),p(t.post().User.displayname),i(3),p("@"+t.post().User.username),i(3),p(I(9,6,t.post().createdAt,"d/M/YY, h:mm a")),i(3),p(t.post().content),i(3),b("C : ",t.post().commentcount,"")}}var d=class e{post=m.required();static \u0275fac=function(t){return new(t||e)};static \u0275cmp=a({type:e,selectors:[["app-post"]],inputs:{post:[1,"post"]},standalone:!0,features:[c],decls:1,vars:1,consts:[[3,"routerLink"],[1,"username"],[1,"date"],[1,"action"]],template:function(t,f){t&1&&C(0,F,15,9,"article",0),t&2&&g(f.post()?0:-1)},dependencies:[w,M],styles:["article[_ngcontent-%COMP%]{border:1px solid whitesmoke;border-radius:2px;padding:8px;margin:8px 0}span[_ngcontent-%COMP%]{font-weight:700}span.date[_ngcontent-%COMP%]{font-weight:100;font-size:12px}span.username[_ngcontent-%COMP%]{font-weight:400}p[_ngcontent-%COMP%]{color:#fff}.action[_ngcontent-%COMP%]{display:flex;font-size:12px}"]})};var O=(e,o)=>o.id;function E(e,o){if(e&1&&v(0,"app-post",0),e&2){let t=o.$implicit;l("post",t)}}var D=class e{list=m();username;constructor(){}static \u0275fac=function(t){return new(t||e)};static \u0275cmp=a({type:e,selectors:[["app-postlist"]],inputs:{list:[1,"list"]},standalone:!0,features:[c],decls:2,vars:0,consts:[[3,"post"]],template:function(t,f){t&1&&x(0,E,1,1,"app-post",0,O),t&2&&h(f.list())},dependencies:[d]})};var $=class e{constructor(o){this.http=o}baseUrl=S.baseUrl;getAllPosts(){return this.http.get(this.baseUrl+"/posts")}getAllUserPosts(o){return this.http.get(`${this.baseUrl}/${o}/posts`)}getUserPostById(o,t){return this.http.get(`${this.baseUrl}/${o}/post/${t}`)}addNewPost(o){return this.http.post(this.baseUrl+"/post",o)}static \u0275fac=function(t){return new(t||e)(P(U))};static \u0275prov=u({token:e,factory:e.\u0275fac,providedIn:"root"})};export{d as a,D as b,$ as c};
